!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ARCHIVE	Makefile	/^ARCHIVE = ar rc$/;"	m
BOOL_H	incl/bool.h	/^# define BOOL_H$/;"	d
BUFF_SIZE	incl/gnl.h	/^# define BUFF_SIZE /;"	d
CC	Makefile	/^CC = gcc$/;"	m
CCFLAGS	Makefile	/^CCFLAGS = -I.incl -g -Wall -Werror -Wextra -O0 -c$/;"	m
CHAR_H	incl/char.h	/^# define CHAR_H$/;"	d
CHAR_SRC	Makefile	/^CHAR_SRC =	src\/primitive\/char\/ft_isalnum.c src\/primitive\/char\/ft_isalpha.c \\$/;"	m
CNVRSN_H	incl/cnvrsn.h	/^# define CNVRSN_H$/;"	d
CNVRSN_SRC	Makefile	/^CNVRSN_SRC =	src\/primitive\/cnvrsn\/ft_atoi.c src\/primitive\/cnvrsn\/ft_itoa.c \\$/;"	m
FALSE	incl/bool.h	/^	FALSE,$/;"	e	enum:e_lean
GNL_H	incl/gnl.h	/^# define GNL_H$/;"	d
GNL_SRC	Makefile	/^GNL_SRC =	src\/futil\/gnl\/gnl.c$/;"	m
HEADDR	Makefile	/^HEADDR = \/incl\/char.h \/incl\/cnvrsn.h \/incl\/mem.h \/incl\/num.h \/incl\/put.h \\$/;"	m
INDEX	Makefile	/^INDEX = ranlib$/;"	m
LST_H	incl/lst.h	/^# define LST_H$/;"	d
LST_SRC	Makefile	/^LST_SRC =	src\/typedefined\/lst\/ft_lstadd.c \\$/;"	m
MEM_H	incl/mem.h	/^# define MEM_H$/;"	d
MEM_SRC	Makefile	/^MEM_SRC =	src\/primitive\/mem\/\/ft_bzero.c src\/primitive\/mem\/ft_memalloc.c \\$/;"	m
NAME	Makefile	/^NAME = libftprintf.a$/;"	m
NUM_H	incl/num.h	/^# define NUM_H$/;"	d
NUM_SRC	Makefile	/^NUM_SRC = 	src\/primitive\/num\/ft_numlen.c$/;"	m
OBJ	Makefile	/^OBJ = *.o$/;"	m
PRINTF_H	incl/printf.h	/^# define PRINTF_H$/;"	d
PRINTF_SRC	Makefile	/^PRINTF_SRC =src\/ft_printf\/ft_printf.c src\/ft_printf\/pf_initstructs.c \\$/;"	m
PUT_H	incl/put.h	/^# define PUT_H$/;"	d
PUT_SRC	Makefile	/^PUT_SRC = 	src\/primitive\/put\/ft_putchar.c src\/primitive\/put\/ft_putchar_fd.c \\$/;"	m
RM	Makefile	/^RM = -rm -fr$/;"	m
SQR	incl/num.h	/^# define SQR(/;"	d
STR_H	incl/str.h	/^# define STR_H$/;"	d
STR_SRC	Makefile	/^STR_SRC = 	src\/primitive\/str\/ft_cntbnespc.c \\$/;"	m
TBL_H	incl/tbl.h	/^# define TBL_H$/;"	d
TBL_SRC	Makefile	/^TBL_SRC = 	src\/primitive\/tbl\/ft_tbldel.c src\/primitive\/tbl\/ft_tbllen.c \\$/;"	m
TRUE	incl/bool.h	/^	TRUE$/;"	e	enum:e_lean
actn	incl/printf.h	/^	t_blean			actn;$/;"	m	struct:s_frmtnfo
actn_0x	src/ft_printf/pf_print_x.c	/^static void		actn_0x(t_frmtnfo *ph, t_pfcore *db)$/;"	f	file:
algn	incl/printf.h	/^	t_blean			algn;$/;"	m	struct:s_frmtnfo
ap	incl/printf.h	/^	va_list			ap;$/;"	m	struct:s_pfcore
content	incl/lst.h	/^	void			*content;$/;"	m	struct:s_list
content_size	incl/lst.h	/^	size_t			content_size;$/;"	m	struct:s_list
e_lean	incl/bool.h	/^typedef	enum	e_lean$/;"	g
ft_atoi	src/primitive/cnvrsn/ft_atoi.c	/^int				ft_atoi(char *str)$/;"	f
ft_bzero	src/primitive/mem/ft_bzero.c	/^void		ft_bzero(void *s, size_t n)$/;"	f
ft_calloc	src/primitive/mem/ft_calloc.c	/^void		*ft_calloc(size_t nmemb, size_t size)$/;"	f
ft_cntbnespc	src/primitive/str/ft_cntbnespc.c	/^size_t		ft_cntbnespc(char *str)$/;"	f
ft_cntbspc	src/primitive/str/ft_cntbspc.c	/^int			ft_cntbspc(char *str)$/;"	f
ft_cnttotspc	src/primitive/str/ft_cnttotspc.c	/^size_t		ft_cnttotspc(char *str)$/;"	f
ft_cntwrds	src/primitive/str/ft_cntwrds.c	/^size_t		ft_cntwrds(char *str, char c)$/;"	f
ft_dirjoin	src/primitive/str/ft_dirjoin.c	/^char			*ft_dirjoin(const char *s1, const char *s2)$/;"	f
ft_fillbuff	src/futil/gnl/gnl.c	/^static size_t		ft_fillbuff(t_list *db, const int fd)$/;"	f	file:
ft_isalnum	src/primitive/char/ft_isalnum.c	/^int		ft_isalnum(int c)$/;"	f
ft_isalpha	src/primitive/char/ft_isalpha.c	/^int		ft_isalpha(int c)$/;"	f
ft_isascii	src/primitive/char/ft_isascii.c	/^int		ft_isascii(int c)$/;"	f
ft_isdigit	src/primitive/char/ft_isdigit.c	/^int		ft_isdigit(int c)$/;"	f
ft_islower	src/primitive/char/ft_islower.c	/^int		ft_islower(int c)$/;"	f
ft_isprint	src/primitive/char/ft_isprint.c	/^int		ft_isprint(int c)$/;"	f
ft_isspc	src/primitive/char/ft_isspc.c	/^int		ft_isspc(int c)$/;"	f
ft_isstralnum	src/primitive/str/ft_isstralnum.c	/^int			ft_isstralnum(char *str)$/;"	f
ft_isstralpha	src/primitive/str/ft_isstralpha.c	/^int			ft_isstralpha(char *str)$/;"	f
ft_isstrascii	src/primitive/str/ft_isstrascii.c	/^int			ft_isstrascii(char *str)$/;"	f
ft_isstrdigit	src/primitive/str/ft_isstrdigit.c	/^int			ft_isstrdigit(char *str)$/;"	f
ft_isstrprint	src/primitive/str/ft_isstrprint.c	/^int			ft_isstrprint(char *str)$/;"	f
ft_isupper	src/primitive/char/ft_isupper.c	/^int		ft_isupper(int c)$/;"	f
ft_itbllen	src/primitive/tbl/ft_itbllen.c	/^size_t		ft_itbllen(int **tbl)$/;"	f
ft_itoa	src/primitive/cnvrsn/ft_itoa.c	/^char		*ft_itoa(intmax_t nbg)$/;"	f
ft_itoabse	src/primitive/cnvrsn/ft_itoabse.c	/^char		*ft_itoabse(intmax_t nbg, int bse)$/;"	f
ft_lstadd	src/typedefined/lst/ft_lstadd.c	/^void	ft_lstadd(t_list **alst, t_list *nw)$/;"	f
ft_lstdel	src/typedefined/lst/ft_lstdel.c	/^void		ft_lstdel(t_list **alst, void (*del)(void *, size_t))$/;"	f
ft_lstdelone	src/typedefined/lst/ft_lstdelone.c	/^void		ft_lstdelone(t_list **alst, void (*del)(void *, size_t))$/;"	f
ft_lstdup	src/typedefined/lst/ft_lstdup.c	/^t_list		*ft_lstdup(t_list *lst)$/;"	f
ft_lsteadd	src/typedefined/lst/ft_lsteadd.c	/^void	ft_lsteadd(t_list **alst, t_list *nw)$/;"	f
ft_lstiter	src/typedefined/lst/ft_lstiter.c	/^void	ft_lstiter(t_list *lst, void (*f)(t_list *elem))$/;"	f
ft_lstlen	src/typedefined/lst/ft_lstlen.c	/^size_t		ft_lstlen(t_list *lst)$/;"	f
ft_lstmap	src/typedefined/lst/ft_lstmap.c	/^t_list		*ft_lstmap(t_list *lst, t_list *(*f)(t_list *elem))$/;"	f
ft_lstnew	src/typedefined/lst/ft_lstnew.c	/^t_list		*ft_lstnew(void const *content, size_t content_size)$/;"	f
ft_lstnewstak	src/typedefined/lst/ft_lstnewstak.c	/^t_list		*ft_lstnewstak(void const *content, size_t content_size)$/;"	f
ft_memalloc	src/primitive/mem/ft_memalloc.c	/^void		*ft_memalloc(size_t size)$/;"	f
ft_memccpy	src/primitive/mem/ft_memccpy.c	/^void				*ft_memccpy(void *s1, const void *s2, int c, size_t n)$/;"	f
ft_memchr	src/primitive/mem/ft_memchr.c	/^void			*ft_memchr(const void *s, int c, size_t n)$/;"	f
ft_memcmp	src/primitive/mem/ft_memcmp.c	/^int					ft_memcmp(const void *s1, const void *s2, size_t n)$/;"	f
ft_memcpy	src/primitive/mem/ft_memcpy.c	/^void			*ft_memcpy(void *dst, const void *src, size_t n)$/;"	f
ft_memdel	src/primitive/mem/ft_memdel.c	/^void		ft_memdel(void **ap)$/;"	f
ft_memmove	src/primitive/mem/ft_memmove.c	/^void		*ft_memmove(void *dst, const void *src, size_t len)$/;"	f
ft_memset	src/primitive/mem/ft_memset.c	/^void		*ft_memset(void *b, int c, size_t len)$/;"	f
ft_numlen	src/primitive/num/ft_numlen.c	/^size_t		ft_numlen(intmax_t nb, int bse)$/;"	f
ft_nxtwrdlen	src/primitive/str/ft_nxtwrdlen.c	/^size_t		ft_nxtwrdlen(char *str, char c)$/;"	f
ft_printf	src/ft_printf/ft_printf.c	/^int			ft_printf(const char *frmt, ...)$/;"	f
ft_putchar	src/primitive/put/ft_putchar.c	/^void	ft_putchar(char c)$/;"	f
ft_putchar_fd	src/primitive/put/ft_putchar_fd.c	/^void		ft_putchar_fd(char c, int fd)$/;"	f
ft_putclst	src/primitive/put/ft_putclst.c	/^void		ft_putclst(t_list *lst)$/;"	f
ft_putendl	src/primitive/put/ft_putendl.c	/^void		ft_putendl(char const *s)$/;"	f
ft_putendl_fd	src/primitive/put/ft_putendl_fd.c	/^void		ft_putendl_fd(char const *s, int fd)$/;"	f
ft_puterror	src/primitive/put/ft_puterror.c	/^int		ft_puterror(int ecode)$/;"	f
ft_putnbr	src/primitive/put/ft_putnbr.c	/^void		ft_putnbr(intmax_t n)$/;"	f
ft_putnbr_fd	src/primitive/put/ft_putnbr_fd.c	/^void			ft_putnbr_fd(intmax_t n, int fd)$/;"	f
ft_putnlst	src/primitive/put/ft_putnlst.c	/^void		ft_putnlst(t_list *lst)$/;"	f
ft_putstr	src/primitive/put/ft_putstr.c	/^void		ft_putstr(char *str)$/;"	f
ft_putstr_fd	src/primitive/put/ft_putstr_fd.c	/^void		ft_putstr_fd(char const *s, int fd)$/;"	f
ft_putstrrev	src/primitive/put/ft_putstrrev.c	/^void		ft_putstrrev(char *str)$/;"	f
ft_puttbl	src/primitive/put/ft_puttbl.c	/^void		ft_puttbl(char **tbl)$/;"	f
ft_realloc	src/primitive/mem/ft_realloc.c	/^void		*ft_realloc(void *mem, size_t memsz, size_t nsz)$/;"	f
ft_strcat	src/primitive/str/ft_strcat.c	/^char	*ft_strcat(char *s1, const char *s2)$/;"	f
ft_strchr	src/primitive/str/ft_strchr.c	/^char		*ft_strchr(const char *s, int c)$/;"	f
ft_strclr	src/primitive/str/ft_strclr.c	/^void	ft_strclr(char *s)$/;"	f
ft_strcmp	src/primitive/str/ft_strcmp.c	/^int				ft_strcmp(const char *s1, const char *s2)$/;"	f
ft_strcntchar	src/primitive/str/ft_strstrip.c	/^static int ft_strcntchar(char *str, int c)$/;"	f	file:
ft_strcpy	src/primitive/str/ft_strcpy.c	/^char		*ft_strcpy(char *dst, char *src)$/;"	f
ft_strdel	src/primitive/str/ft_strdel.c	/^void		ft_strdel(char **as)$/;"	f
ft_strdup	src/primitive/str/ft_strdup.c	/^char		*ft_strdup(const char *src)$/;"	f
ft_strequ	src/primitive/str/ft_strequ.c	/^int		ft_strequ(const char *s1, const char *s2)$/;"	f
ft_striter	src/primitive/str/ft_striter.c	/^void		ft_striter(char *s, void (*f)(char *))$/;"	f
ft_striteri	src/primitive/str/ft_striteri.c	/^void		ft_striteri(char *s, void (*f)(unsigned int, char *))$/;"	f
ft_strjoin	src/primitive/str/ft_strjoin.c	/^char		*ft_strjoin(char const *s1, char const *s2)$/;"	f
ft_strlcat	src/primitive/str/ft_strlcat.c	/^size_t	ft_strlcat(char *dst, const char *src, int len)$/;"	f
ft_strlen	src/primitive/str/ft_strlen.c	/^size_t		ft_strlen(const char *str)$/;"	f
ft_strmap	src/primitive/str/ft_strmap.c	/^char		*ft_strmap(char const *s, char (*f)(char))$/;"	f
ft_strmapi	src/primitive/str/ft_strmapi.c	/^char			*ft_strmapi(char const *s, char (*f)(unsigned int, char))$/;"	f
ft_strncat	src/primitive/str/ft_strncat.c	/^char	*ft_strncat(char *s1, const char *s2, size_t n)$/;"	f
ft_strncmp	src/primitive/str/ft_strncmp.c	/^int		ft_strncmp(const char *s1, const char *s2, size_t n)$/;"	f
ft_strncpy	src/primitive/str/ft_strncpy.c	/^char		*ft_strncpy(char *dst, char *src, size_t len)$/;"	f
ft_strndup	src/primitive/str/ft_strndup.c	/^char		*ft_strndup(const char *src, size_t len)$/;"	f
ft_strnequ	src/primitive/str/ft_strnequ.c	/^int		ft_strnequ(char const *s1, char const *s2, size_t n)$/;"	f
ft_strnew	src/primitive/str/ft_strnew.c	/^char		*ft_strnew(size_t size)$/;"	f
ft_strnstr	src/primitive/str/ft_strnstr.c	/^char	*ft_strnstr(const char *big, const char *little, size_t len)$/;"	f
ft_strrchr	src/primitive/str/ft_strrchr.c	/^char		*ft_strrchr(const char *s, int c)$/;"	f
ft_strrev	src/primitive/str/ft_strrev.c	/^char	*ft_strrev(char *str)$/;"	f
ft_strsplit	src/primitive/str/ft_strsplit.c	/^char			**ft_strsplit(char const *s, char c)$/;"	f
ft_strstr	src/primitive/str/ft_strstr.c	/^char				*ft_strstr(const char *big, const char *little)$/;"	f
ft_strstrip	src/primitive/str/ft_strstrip.c	/^void ft_strstrip(char *str, int c)$/;"	f
ft_strsub	src/primitive/str/ft_strsub.c	/^char		*ft_strsub(char const *s, unsigned int start, size_t len)$/;"	f
ft_strtrim	src/primitive/str/ft_strtrim.c	/^char			*ft_strtrim(char const *s)$/;"	f
ft_tbladdl	src/primitive/tbl/ft_tbladdl.c	/^char		**ft_tbladdl(char **tbl, char *line)$/;"	f
ft_tblcnew	src/primitive/tbl/ft_tblcnew.c	/^char		**ft_tblcnew(int len)$/;"	f
ft_tbldel	src/primitive/tbl/ft_tbldel.c	/^void		ft_tbldel(char **tbl)$/;"	f
ft_tbldup	src/primitive/tbl/ft_tbldup.c	/^char		**ft_tbldup(char **tbl, int len)$/;"	f
ft_tbllen	src/primitive/tbl/ft_tbllen.c	/^size_t		ft_tbllen(char **tbl)$/;"	f
ft_tblnnew	src/primitive/tbl/ft_tblnnew.c	/^long		**ft_tblnnew(int len)$/;"	f
ft_tblrepline	src/primitive/tbl/ft_tblrepline.c	/^int		ft_tblrepline(char **tbl, char *substr, char *repline)$/;"	f
ft_tblrmline	src/primitive/tbl/ft_tblrmline.c	/^char			**ft_tblrmline(char **tbl, char *rm, int len)$/;"	f
ft_tolower	src/primitive/str/ft_tolower.c	/^int		ft_tolower(int c)$/;"	f
ft_toupper	src/primitive/str/ft_toupper.c	/^int		ft_toupper(int c)$/;"	f
ft_xtrctline	src/futil/gnl/gnl.c	/^static size_t		ft_xtrctline(t_list *db, char **line)$/;"	f	file:
ft_xtrctnxtwrd	src/primitive/str/ft_strsplit.c	/^static char		*ft_xtrctnxtwrd(char *str, char c, size_t *i)$/;"	f	file:
g_lhex	src/ft_printf/pf_itoabse.c	/^static char				*g_lhex = {"0123456789abcdef"};$/;"	v	file:
g_uhex	src/ft_printf/pf_itoabse.c	/^static char				*g_uhex = {"0123456789ABCDEF"};$/;"	v	file:
gnl	src/futil/gnl/gnl.c	/^int					gnl(const int fd, char **line)$/;"	f
handel_ihash	src/ft_printf/pf_print_i.c	/^static void		handel_ihash(t_frmtnfo *ph, t_pfcore *db)$/;"	f	file:
handel_isign	src/ft_printf/pf_print_i.c	/^static void		handel_isign(t_frmtnfo *ph, t_pfcore *db)$/;"	f	file:
hash	incl/printf.h	/^	t_blean			hash;$/;"	m	struct:s_frmtnfo
i	incl/printf.h	/^	int				i;$/;"	m	union:__anon1
imt	incl/printf.h	/^	intmax_t		imt;$/;"	m	union:__anon1
init_t_frmtnfo	src/ft_printf/pf_initstructs.c	/^void		init_t_frmtnfo(t_frmtnfo *ipg)$/;"	f
init_uinput	src/ft_printf/pf_initstructs.c	/^void		init_uinput(t_pfcore *db)$/;"	f
inx	incl/printf.h	/^	int				inx;$/;"	m	struct:s_pfcore
l	incl/printf.h	/^	long			l;$/;"	m	union:__anon1
len	incl/printf.h	/^	int				len;$/;"	m	struct:s_frmtnfo
ll	incl/printf.h	/^	long long		ll;$/;"	m	union:__anon1
manage_isign	src/ft_printf/pf_ihelp.c	/^void		manage_isign(t_frmtnfo *ph)$/;"	f
manage_it_frmtnfo	src/ft_printf/pf_print_i.c	/^static int		manage_it_frmtnfo(t_frmtnfo *ph)$/;"	f	file:
manage_iwidprec	src/ft_printf/pf_ihelp.c	/^void		manage_iwidprec(t_frmtnfo *ph)$/;"	f
manage_ot_frmtnfo	src/ft_printf/pf_print_o.c	/^static int		manage_ot_frmtnfo(t_frmtnfo *ph)$/;"	f	file:
manage_owidprec	src/ft_printf/pf_print_o.c	/^static void		manage_owidprec(t_frmtnfo *ph)$/;"	f	file:
manage_swidprec	src/ft_printf/pf_print_s.c	/^static int		manage_swidprec(t_frmtnfo *ph, t_pfcore *db, char *phs)$/;"	f	file:
manage_xt_frmtnfo	src/ft_printf/pf_print_x.c	/^static int		manage_xt_frmtnfo(t_frmtnfo *ph)$/;"	f	file:
mod	incl/printf.h	/^	char			mod;$/;"	m	struct:s_frmtnfo
next	incl/lst.h	/^	struct s_list	*next;$/;"	m	struct:s_list	typeref:struct:s_list::s_list
pf_frmtnfo	src/ft_printf/ft_printf.c	/^int			pf_frmtnfo(const char *frmt, t_frmtnfo *ph, t_pfcore *db)$/;"	f
pf_get_prec	src/ft_printf/pf_width.c	/^void		pf_get_prec(const char *frmt, t_frmtnfo *ph, t_pfcore *db)$/;"	f
pf_get_width	src/ft_printf/pf_width.c	/^void		pf_get_width(const char *frmt, t_frmtnfo *ph, t_pfcore *db)$/;"	f
pf_inumlen	src/ft_printf/pf_ihelp.c	/^size_t		pf_inumlen(uintmax_t nb, int bse)$/;"	f
pf_isflag	src/ft_printf/pf_is.c	/^int			pf_isflag(int c)$/;"	f
pf_ismod_pre	src/ft_printf/pf_mod.c	/^int			pf_ismod_pre(const char *frmt, t_pfcore *db)$/;"	f
pf_isoxdi	src/ft_printf/pf_is.c	/^int			pf_isoxdi(int c)$/;"	f
pf_istype	src/ft_printf/pf_is.c	/^int			pf_istype(int c)$/;"	f
pf_isupper	src/ft_printf/pf_is.c	/^int			pf_isupper(int c)$/;"	f
pf_iswidth	src/ft_printf/pf_width.c	/^int			pf_iswidth(int c)$/;"	f
pf_itoabse	src/ft_printf/pf_itoabse.c	/^char		*pf_itoabse(uintmax_t nbg, int bse, t_frmtnfo *ph)$/;"	f
pf_itoaz	src/ft_printf/pf_itoabse.c	/^static char	*pf_itoaz(t_frmtnfo *ph)$/;"	f	file:
pf_lmgmt_id	src/ft_printf/pf_cast_di.c	/^void		pf_lmgmt_id(t_pfcore *db, t_frmtnfo *ph)$/;"	f
pf_lmgmt_oux	src/ft_printf/pf_cast_oux.c	/^void		pf_lmgmt_oux(t_pfcore *db, t_frmtnfo *ph)$/;"	f
pf_numlen	src/ft_printf/pf_itoabse.c	/^size_t		pf_numlen(uintmax_t nb, int bse, t_frmtnfo *ph)$/;"	f
pf_parse	src/ft_printf/ft_printf.c	/^int			pf_parse(const char *frmt, t_pfcore *db)$/;"	f
pf_parse_mod	src/ft_printf/pf_mod.c	/^int			pf_parse_mod(const char *frmt, t_pfcore *db, t_frmtnfo *ph)$/;"	f
pf_pause_parse	src/ft_printf/ft_printf.c	/^int			pf_pause_parse(const char *frmt, t_pfcore *db)$/;"	f
pf_phlen	src/ft_printf/pf_width.c	/^int			pf_phlen(const char *frmt, t_pfcore *db)$/;"	f
pf_phmaster	src/ft_printf/ft_printf.c	/^int			pf_phmaster(t_frmtnfo *ph, t_pfcore *db)$/;"	f
pf_print_c	src/ft_printf/pf_print_c.c	/^int				pf_print_c(t_frmtnfo *ph, t_pfcore *db)$/;"	f
pf_print_i	src/ft_printf/pf_print_i.c	/^int				pf_print_i(t_frmtnfo *ph, t_pfcore *db)$/;"	f
pf_print_irev	src/ft_printf/pf_print_i.c	/^static void		pf_print_irev(t_frmtnfo *ph, t_pfcore *db)$/;"	f	file:
pf_print_o	src/ft_printf/pf_print_o.c	/^int				pf_print_o(t_frmtnfo *ph, t_pfcore *db)$/;"	f
pf_print_p	src/ft_printf/pf_print_p.c	/^int				pf_print_p(t_frmtnfo *ph, t_pfcore *db)$/;"	f
pf_print_perc	src/ft_printf/pf_print_perc.c	/^int				pf_print_perc(t_frmtnfo *ph, t_pfcore *db)$/;"	f
pf_print_s	src/ft_printf/pf_print_s.c	/^int				pf_print_s(t_frmtnfo *ph, t_pfcore *db)$/;"	f
pf_print_x	src/ft_printf/pf_print_x.c	/^int				pf_print_x(t_frmtnfo *ph, t_pfcore *db)$/;"	f
pf_putchar	src/ft_printf/pf_putchar.c	/^int				pf_putchar(char c, t_pfcore *db)$/;"	f
pf_putnbr	src/ft_printf/pf_putnbr.c	/^int			pf_putnbr(uintmax_t n, t_frmtnfo *ph, t_pfcore *db)$/;"	f
pf_putstr	src/ft_printf/pf_putstr.c	/^int		pf_putstr(char *str, t_frmtnfo *ph, t_pfcore *db)$/;"	f
pf_putstrprec	src/ft_printf/pf_print_s.c	/^int				pf_putstrprec(char *str, t_frmtnfo *ph, t_pfcore *db)$/;"	f
pf_tick_algn	src/ft_printf/pf_tick.c	/^void		pf_tick_algn(t_frmtnfo *ph, t_pfcore *db)$/;"	f
pf_tick_hash	src/ft_printf/pf_tick.c	/^void		pf_tick_hash(t_frmtnfo *ph, t_pfcore *db)$/;"	f
pf_tick_sign	src/ft_printf/pf_tick.c	/^void		pf_tick_sign(t_frmtnfo *ph, t_pfcore *db)$/;"	f
pf_tick_spc	src/ft_printf/pf_tick.c	/^void		pf_tick_spc(t_frmtnfo *ph, t_pfcore *db)$/;"	f
pf_tick_zero	src/ft_printf/pf_tick.c	/^void		pf_tick_zero(t_frmtnfo *ph, t_pfcore *db)$/;"	f
pf_typechr	src/ft_printf/pf_typechr.c	/^char		*pf_typechr(char *phstrt)$/;"	f
phd	incl/printf.h	/^	t_data			phd;$/;"	m	struct:s_frmtnfo
prec	incl/printf.h	/^	int				prec;$/;"	m	struct:s_frmtnfo
printo_ndel	src/ft_printf/pf_print_o.c	/^static void		printo_ndel(t_frmtnfo *ph, t_pfcore *db)$/;"	f	file:
printp_ndel	src/ft_printf/pf_print_p.c	/^static void		printp_ndel(t_frmtnfo *ph, t_pfcore *db)$/;"	f	file:
printx_ndel	src/ft_printf/pf_print_x.c	/^static void		printx_ndel(t_frmtnfo *ph, t_pfcore *db)$/;"	f	file:
puterror	src/ft_printf/pf_puterror.c	/^int		puterror(int ecode)$/;"	f
putpad_c	src/ft_printf/pf_print_c.c	/^static void		putpad_c(t_frmtnfo *ph, t_pfcore *db)$/;"	f	file:
putpad_i	src/ft_printf/pf_ihelp.c	/^void		putpad_i(t_frmtnfo *ph, t_pfcore *db)$/;"	f
putpad_o	src/ft_printf/pf_print_o.c	/^static void		putpad_o(t_frmtnfo *ph, t_pfcore *db)$/;"	f	file:
putpad_p	src/ft_printf/pf_print_p.c	/^static void		putpad_p(t_frmtnfo *ph, t_pfcore *db)$/;"	f	file:
putpad_perc	src/ft_printf/pf_print_perc.c	/^static void		putpad_perc(t_frmtnfo *ph, t_pfcore *db)$/;"	f	file:
putpad_s	src/ft_printf/pf_print_s.c	/^static void		putpad_s(t_frmtnfo *ph, t_pfcore *db)$/;"	f	file:
putpad_x	src/ft_printf/pf_print_x.c	/^static void		putpad_x(t_frmtnfo *ph, t_pfcore *db)$/;"	f	file:
putprec	src/ft_printf/pf_putnbr.c	/^void		putprec(t_frmtnfo *ph, t_pfcore *db)$/;"	f
rbyt	incl/lst.h	/^	long long		rbyt;$/;"	m	struct:s_list
s	incl/printf.h	/^	short			s;$/;"	m	union:__anon1
s_frmtnfo	incl/printf.h	/^typedef struct		s_frmtnfo$/;"	s
s_list	incl/lst.h	/^typedef	struct		s_list$/;"	s
s_pfcore	incl/printf.h	/^typedef struct		s_pfcore$/;"	s
sc	incl/printf.h	/^	signed char		sc;$/;"	m	union:__anon1
sign	incl/printf.h	/^	t_blean			sign;$/;"	m	struct:s_frmtnfo
spc	incl/printf.h	/^	t_blean			spc;$/;"	m	struct:s_frmtnfo
st	incl/printf.h	/^	size_t			st;$/;"	m	union:__anon1
t_blean	incl/bool.h	/^}				t_blean;$/;"	t	typeref:enum:e_lean
t_data	incl/printf.h	/^}					t_data;$/;"	t	typeref:union:__anon1
t_frmtnfo	incl/printf.h	/^}					t_frmtnfo;$/;"	t	typeref:struct:s_frmtnfo
t_list	incl/lst.h	/^}					t_list;$/;"	t	typeref:struct:s_list
t_pfcore	incl/printf.h	/^}					t_pfcore;$/;"	t	typeref:struct:s_pfcore
tot	incl/printf.h	/^	int				tot;$/;"	m	struct:s_pfcore
type	incl/printf.h	/^	char			type;$/;"	m	struct:s_frmtnfo
uc	incl/printf.h	/^	unsigned char	uc;$/;"	m	union:__anon1
uimt	incl/printf.h	/^	uintmax_t		uimt;$/;"	m	union:__anon1
ul	incl/printf.h	/^	unsigned long	ul;$/;"	m	union:__anon1
upper	incl/printf.h	/^	t_blean			upper;$/;"	m	struct:s_frmtnfo
us	incl/printf.h	/^	unsigned short	us;$/;"	m	union:__anon1
width	incl/printf.h	/^	int				width;$/;"	m	struct:s_frmtnfo
wneg	incl/printf.h	/^	t_blean			wneg;$/;"	m	struct:s_frmtnfo
wprc	incl/printf.h	/^	t_blean			wprc;$/;"	m	struct:s_frmtnfo
zero	incl/printf.h	/^	t_blean			zero;$/;"	m	struct:s_frmtnfo
